name: Release

on:
  push:
    branches:
      - main # Targeting only the main branch - pushes to this branch trigger release cycle

jobs:
  changelog:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.changelog.outputs.version }}
      body: ${{ steps.changelog.outputs.clean_changelog }}
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
    steps:
      - name: Checkout code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v5.1
        with:
          modules-to-cache: Pester, posh-git, platyPS, InvokeBuild, BuildHelpers, MicrosoftTeams

      - name: Test
        run: .\packages\build\test.ps1

      - name: Document
        run: .\packages\build\document.ps1

      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          #skip-version-file: "true" # This would omit the output to the Package JSON, we need that though for publishing!
          #version-file: .\package.json # This is default and does not need to be specified
          output-file: "CHANGELOG.md" # We want a changelog to be created for posterity
          skip-commit: "false" # We want a commit to write the Changelog file
          skip-on-empty: "true"

  publish-module:
    if: ${{ needs.changelog.outputs.skipped == 'false' }}
    needs: changelog
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v5.1
        with:
          modules-to-cache: Pester, posh-git, platyPS, InvokeBuild, BuildHelpers, MicrosoftTeams
          #updatable: 'true' # If used, must have cache information (i.e. version number for at least one module)

      - name: Install
        run: .\packages\build\install.ps1

      - name: Build
        run: .\packages\build\build.ps1

      - name: Sign
        run: .\packages\build\sign.ps1
        env:
          CODESIGN: ${{secrets.CODESIGN}}

      - name: Publish
        run: .\packages\build\publish.ps1
        # This takes the version from the package.json as it can read that without issue
        env:
          NuGetApiKey: ${{secrets.NuGetApiKey}}

      - name: Complete
        run: Write-Output "Module published to PowerShell Gallery"

  publish:
    if: ${{ needs.changelog.outputs.skipped == 'false' }}
    needs: publish-module
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Create tag for Head
        run: git tag ${{ needs.changelog.outputs.tag }}

      - name: Create Release
        uses: ncipollo/release-action@v1.11.1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag: ${{ needs.changelog.outputs.tag }}
          name: ${{ needs.changelog.outputs.tag }}
          body: ${{ needs.changelog.outputs.body }}

      - name: Complete
        run: Write-Output "Module published to Github"
